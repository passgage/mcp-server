name: Release and Publish

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run type check
        run: npm run type-check

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Build
        run: npm run build

  release:
    name: Release and Publish
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

      - name: Update server.json version
        if: success()
        run: |
          # Get the new version from package.json
          NEW_VERSION=$(node -p "require('./package.json').version")
          # Update server.json with the new version
          sed -i "s/\"version\": \"[^\"]*\"/\"version\": \"$NEW_VERSION\"/g" server.json
          
          # Check if there are changes to commit
          if [[ -n $(git status --porcelain server.json) ]]; then
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add server.json
            git commit -m "chore: update server.json version to $NEW_VERSION [skip ci]"
            git push origin main
          fi

      # TODO: Enable MCP Registry publishing when it's GA
      # Currently disabled as MCP Registry is in preview and binary is not yet available
      # - name: Setup MCP Publisher
      #   if: success()
      #   run: |
      #     # Clone MCP Registry and build publisher
      #     git clone https://github.com/modelcontextprotocol/registry.git /tmp/mcp-registry
      #     cd /tmp/mcp-registry
      #     cd cmd/publisher
      #     go build -o /tmp/mcp-publisher .
      #     chmod +x /tmp/mcp-publisher

      # - name: Login to MCP Registry
      #   if: success()
      #   run: |
      #     # Login using GitHub OIDC
      #     /tmp/mcp-publisher login github-oidc

      # - name: Publish to MCP Registry
      #   if: success()
      #   run: |
      #     # Publish server.json to MCP Registry
      #     /tmp/mcp-publisher publish