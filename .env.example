# Passgage MCP Server Configuration

# ====================
# Authentication (Choose ONE method)
# ====================

# Option 1: API Key (Company-level access)
# - Provides company-level access to all users and data
# - Long-lived authentication, no token refresh needed  
# - Best for system integrations and admin operations
PASSGAGE_API_KEY=your_company_api_key_here

# Option 2: User Credentials (User-level access)
# - Provides user-level access with personal permissions
# - JWT token-based with automatic refresh
# - Best for personal use and user-specific operations
# PASSGAGE_USER_EMAIL=user@company.com
# PASSGAGE_USER_PASSWORD=your_password_here

# ====================
# API Configuration
# ====================

# Base URL for Passgage API
PASSGAGE_BASE_URL=https://api.passgage.com

# Request timeout in milliseconds
PASSGAGE_TIMEOUT=30000

# Enable debug mode for detailed logging
PASSGAGE_DEBUG=false

# ====================
# Transport Configuration
# ====================

# Transport type: stdio (default), http, websocket
TRANSPORT_TYPE=stdio

# HTTP Transport settings (when TRANSPORT_TYPE=http)
# HTTP_PORT=3000
# HTTP_HOST=localhost
# HTTP_PATH=/mcp
# HTTP_CORS=true

# ====================
# Logging Configuration
# ====================

# Log level: debug, info, warn, error
LOG_LEVEL=info

# Log format: json, pretty
LOG_FORMAT=json

# ====================
# Environment
# ====================

# Node environment: development, production, test
NODE_ENV=production

# ====================
# Notes
# ====================
# - You must configure at least one authentication method
# - If both API key and user credentials are configured, API key takes precedence
# - Use 'passgage_switch_to_user_mode' or 'passgage_switch_to_company_mode' tools to change modes
# - Company mode: Full admin access, User mode: Limited personal access